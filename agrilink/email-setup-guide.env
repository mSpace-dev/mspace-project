# Add these environment variables to your .env.local file for email functionality

# Email Service Configuration (Gmail example)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password

# For Gmail, you need to:
# 1. Enable 2-factor authentication
# 2. Generate an "App Password" (not your regular password)
# 3. Use that app password as SMTP_PASS

# Alternative email services:
# - For Outlook/Hotmail: smtp.office365.com:587
# - For Yahoo: smtp.mail.yahoo.com:587
# - For custom SMTP: your-mail-server.com:587

# Application Configuration
NEXT_PUBLIC_BASE_URL=http://localhost:3000
# Change to your production URL when deploying: https://yourdomain.com

# Security
CRON_SECRET=your-secure-random-string-for-cron-jobs
# Generate a secure random string for protecting automated job endpoints

# MongoDB (if not already configured)
MONGODB_URI=mongodb://localhost:27017/agrilink
# Or your MongoDB Atlas connection string

# How to set up Gmail for email sending:
# 1. Go to your Google Account settings
# 2. Security → 2-Step Verification (enable if not already)
# 3. Security → App passwords
# 4. Generate a new app password for "AgriLink"
# 5. Use that 16-character password as SMTP_PASS

# Testing the email service:
# After setting up the environment variables, you can test by:
# POST /api/test-email
# {
#   "type": "welcome",
#   "email": "test@example.com"
# }
